# Generated by Django 4.0 on 2022-12-12 14:15

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('workspaces', '0001_initial'),
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('password', models.CharField(max_length=255)),
                ('fullname', models.CharField(max_length=255)),
                ('position', models.CharField(max_length=255)),
                ('image', models.FileField(blank=True, null=True, upload_to='users/')),
                ('phone', models.CharField(max_length=20)),
                ('location', models.CharField(max_length=255)),
                ('role', models.CharField(choices=[('SUPER_ADMIN', 'SUPER_ADMIN'), ('HYBRID_ADMIN', 'HYBRID_ADMIN'), ('TMS_ADMIN', 'TMS_ADMIN'), ('AMS_ADMIN', 'AMS_ADMIN'), ('HYBRID_USER', 'HYBRID_USER'), ('TMS_USER', 'TMS_USER'), ('AMS_USER', 'AMS_USER')], max_length=20)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=False)),
                ('last_login', models.DateTimeField(null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('verified', models.BooleanField(default=False)),
                ('mac_address', models.CharField(blank=True, default='', max_length=20)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
                ('workspace', models.ManyToManyField(related_name='user_workspace', to='workspaces.WorkSpace')),
            ],
            options={
                'ordering': ('fullname',),
            },
        ),
        migrations.CreateModel(
            name='Token',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('token', models.CharField(max_length=255, null=True)),
                ('token_type', models.CharField(choices=[('ACCOUNT_VERIFICATION', 'ACCOUNT_VERIFICATION'), ('PASSWORD_RESET', 'PASSWORD_RESET')], default='ACCOUNT_VERIFICATION', max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.user')),
            ],
        ),
    ]
