# Generated by Django 4.0 on 2022-11-24 20:29

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AccountsCustomuser',
            fields=[
                ('password', models.CharField(blank=True, max_length=128, null=True)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.BooleanField()),
                ('is_staff', models.BooleanField()),
                ('is_active', models.BooleanField()),
                ('date_joined', models.DateTimeField()),
                ('id', models.UUIDField(primary_key=True, serialize=False)),
                ('email', models.CharField(blank=True, max_length=254, null=True, unique=True)),
                ('phone_number', models.CharField(blank=True, max_length=128, null=True, unique=True)),
                ('type', models.SmallIntegerField()),
                ('username', models.CharField(blank=True, max_length=100, null=True, unique=True)),
                ('pin', models.CharField(blank=True, max_length=128, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('is_verified', models.BooleanField()),
                ('merchant_activity_status', models.BooleanField()),
                ('is_archived', models.BooleanField()),
            ],
            options={
                'db_table': 'accounts_customuser',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountsCustomuserGroups',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'accounts_customuser_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountsCustomuserUserPermissions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'accounts_customuser_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountsProfile',
            fields=[
                ('id', models.UUIDField(primary_key=True, serialize=False)),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('city', models.CharField(blank=True, max_length=100, null=True)),
                ('country', models.CharField(blank=True, max_length=2, null=True)),
                ('postal_code', models.CharField(blank=True, max_length=10, null=True)),
                ('updated_at', models.DateTimeField()),
                ('activity_reward', models.FloatField()),
                ('activity_today', models.IntegerField()),
                ('referral_code', models.CharField(blank=True, max_length=100, null=True)),
                ('total_activity', models.IntegerField()),
                ('weekly_activity', models.IntegerField()),
            ],
            options={
                'db_table': 'accounts_profile',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AccountsSetting',
            fields=[
                ('id', models.UUIDField(primary_key=True, serialize=False)),
                ('font_size', models.SmallIntegerField()),
                ('terms_and_condition', models.BooleanField()),
                ('updated_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'accounts_setting',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthtokenToken',
            fields=[
                ('key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('created', models.DateTimeField()),
            ],
            options={
                'db_table': 'authtoken_token',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BusinessBusinessaccount',
            fields=[
                ('id', models.UUIDField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('currency', models.CharField(max_length=3)),
                ('address', models.TextField(blank=True, null=True)),
                ('city', models.CharField(blank=True, max_length=100, null=True)),
                ('country', models.CharField(max_length=2)),
                ('postal_code', models.CharField(blank=True, max_length=10, null=True)),
                ('email', models.CharField(blank=True, max_length=254, null=True, unique=True)),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
                ('tax_identification_number', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'business_businessaccount',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BusinessBusinessaccounttax',
            fields=[
                ('id', models.UUIDField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('percentage', models.DecimalField(decimal_places=2, max_digits=5)),
                ('active', models.BooleanField()),
                ('description', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'business_businessaccounttax',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BusinessBusinessaccountUsers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'business_businessaccount_users',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BusinessBusinesspreference',
            fields=[
                ('id', models.UUIDField(primary_key=True, serialize=False)),
                ('receipt_color', models.CharField(max_length=10)),
            ],
            options={
                'db_table': 'business_businesspreference',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BusinessBusinessprofile',
            fields=[
                ('id', models.UUIDField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'business_businessprofile',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BusinessBusinesstype',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('icon', models.CharField(blank=True, max_length=200, null=True)),
            ],
            options={
                'db_table': 'business_businesstype',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CurrencyconverterCurrencyrate',
            fields=[
                ('id', models.UUIDField(primary_key=True, serialize=False)),
                ('currency', models.CharField(max_length=255)),
                ('date', models.DateField(blank=True, null=True)),
                ('rate', models.FloatField(blank=True, null=True)),
                ('created_at', models.DateField()),
                ('updated_at', models.DateField()),
            ],
            options={
                'db_table': 'currencyconverter_currencyrate',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CustomersCustomer',
            fields=[
                ('id', models.UUIDField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('phone_number', models.CharField(blank=True, max_length=128, null=True)),
                ('email', models.CharField(blank=True, max_length=254, null=True)),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
                ('address', models.TextField(blank=True, null=True)),
                ('is_active', models.BooleanField()),
            ],
            options={
                'db_table': 'customers_customer',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.SmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoCeleryBeatClockedschedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('clocked_time', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_celery_beat_clockedschedule',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoCeleryBeatCrontabschedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('minute', models.CharField(max_length=240)),
                ('hour', models.CharField(max_length=96)),
                ('day_of_week', models.CharField(max_length=64)),
                ('day_of_month', models.CharField(max_length=124)),
                ('month_of_year', models.CharField(max_length=64)),
                ('timezone', models.CharField(max_length=63)),
            ],
            options={
                'db_table': 'django_celery_beat_crontabschedule',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoCeleryBeatIntervalschedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('every', models.IntegerField()),
                ('period', models.CharField(max_length=24)),
            ],
            options={
                'db_table': 'django_celery_beat_intervalschedule',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoCeleryBeatPeriodictask',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, unique=True)),
                ('task', models.CharField(max_length=200)),
                ('args', models.TextField()),
                ('kwargs', models.TextField()),
                ('queue', models.CharField(blank=True, max_length=200, null=True)),
                ('exchange', models.CharField(blank=True, max_length=200, null=True)),
                ('routing_key', models.CharField(blank=True, max_length=200, null=True)),
                ('expires', models.DateTimeField(blank=True, null=True)),
                ('enabled', models.BooleanField()),
                ('last_run_at', models.DateTimeField(blank=True, null=True)),
                ('total_run_count', models.IntegerField()),
                ('date_changed', models.DateTimeField()),
                ('description', models.TextField()),
                ('one_off', models.BooleanField()),
                ('start_time', models.DateTimeField(blank=True, null=True)),
                ('priority', models.IntegerField(blank=True, null=True)),
                ('headers', models.TextField()),
                ('expire_seconds', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'django_celery_beat_periodictask',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoCeleryBeatPeriodictasks',
            fields=[
                ('ident', models.SmallIntegerField(primary_key=True, serialize=False)),
                ('last_update', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_celery_beat_periodictasks',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoCeleryBeatSolarschedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event', models.CharField(max_length=24)),
                ('latitude', models.DecimalField(decimal_places=6, max_digits=9)),
                ('longitude', models.DecimalField(decimal_places=6, max_digits=9)),
            ],
            options={
                'db_table': 'django_celery_beat_solarschedule',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoCeleryResultsChordcounter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group_id', models.CharField(max_length=255, unique=True)),
                ('sub_tasks', models.TextField()),
                ('count', models.IntegerField()),
            ],
            options={
                'db_table': 'django_celery_results_chordcounter',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoCeleryResultsTaskresult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('task_id', models.CharField(max_length=255, unique=True)),
                ('status', models.CharField(max_length=50)),
                ('content_type', models.CharField(max_length=128)),
                ('content_encoding', models.CharField(max_length=64)),
                ('result', models.TextField(blank=True, null=True)),
                ('date_done', models.DateTimeField()),
                ('traceback', models.TextField(blank=True, null=True)),
                ('meta', models.TextField(blank=True, null=True)),
                ('task_args', models.TextField(blank=True, null=True)),
                ('task_kwargs', models.TextField(blank=True, null=True)),
                ('task_name', models.CharField(blank=True, max_length=255, null=True)),
                ('worker', models.CharField(blank=True, max_length=100, null=True)),
                ('date_created', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_celery_results_taskresult',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSite',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('domain', models.CharField(max_length=100, unique=True)),
                ('name', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'django_site',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ExpensesExpense',
            fields=[
                ('id', models.UUIDField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=100)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=12)),
                ('date', models.DateField()),
                ('created_at', models.DateTimeField()),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'expenses_expense',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FcmDjangoFcmdevice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('active', models.BooleanField()),
                ('date_created', models.DateTimeField(blank=True, null=True)),
                ('device_id', models.CharField(blank=True, max_length=255, null=True)),
                ('registration_id', models.TextField()),
                ('type', models.CharField(max_length=10)),
            ],
            options={
                'db_table': 'fcm_django_fcmdevice',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='InventoryBarcode',
            fields=[
                ('id', models.UUIDField(primary_key=True, serialize=False)),
                ('barcode_number', models.CharField(max_length=255, unique=True)),
                ('product_name', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('barcode_photo', models.CharField(blank=True, max_length=100, null=True)),
                ('verified', models.BooleanField()),
                ('archived', models.BooleanField()),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
                ('verified_at', models.DateTimeField(blank=True, null=True)),
                ('brand_name', models.CharField(blank=True, max_length=255, null=True)),
                ('created_strategy', models.IntegerField()),
                ('manufacturer_name', models.CharField(blank=True, max_length=255, null=True)),
                ('image_url', models.CharField(blank=True, max_length=200, null=True)),
            ],
            options={
                'db_table': 'inventory_barcode',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='InventorySold',
            fields=[
                ('id', models.UUIDField(primary_key=True, serialize=False)),
                ('quantity', models.DecimalField(decimal_places=2, max_digits=12)),
                ('sales_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'inventory_sold',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='InventoryStock',
            fields=[
                ('id', models.UUIDField(primary_key=True, serialize=False)),
                ('product', models.CharField(max_length=100)),
                ('unit', models.CharField(max_length=3)),
                ('quantity', models.DecimalField(decimal_places=2, max_digits=12)),
                ('price', models.DecimalField(decimal_places=2, max_digits=12)),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
                ('barcode_number', models.CharField(blank=True, max_length=255, null=True)),
                ('last_restocked_date', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'inventory_stock',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='NotificationsNotification',
            fields=[
                ('id', models.UUIDField(primary_key=True, serialize=False)),
                ('notification_type', models.CharField(max_length=255)),
                ('action_url', models.CharField(blank=True, max_length=200, null=True)),
                ('is_seen', models.BooleanField()),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
                ('action', models.TextField(blank=True, null=True)),
                ('body', models.TextField(blank=True, null=True)),
                ('category', models.CharField(max_length=255)),
                ('title', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'notifications_notification',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='NotificationsNotificationDevices',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'notifications_notification_devices',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='NotificationsNotificationsetting',
            fields=[
                ('id', models.UUIDField(primary_key=True, serialize=False)),
                ('content', models.JSONField(blank=True, null=True)),
                ('is_active', models.BooleanField()),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'notifications_notificationsetting',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='OrdersOrder',
            fields=[
                ('id', models.UUIDField(primary_key=True, serialize=False)),
                ('order_type', models.CharField(max_length=10)),
                ('description', models.TextField(blank=True, null=True)),
                ('custom_cost', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('status', models.CharField(max_length=10)),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
                ('invoice', models.BooleanField()),
                ('invoice_status', models.CharField(max_length=10)),
                ('due_date', models.DateTimeField(blank=True, null=True)),
                ('company', models.TextField(blank=True, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('discount', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ('shipping_fee', models.DecimalField(decimal_places=2, max_digits=12)),
            ],
            options={
                'db_table': 'orders_order',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='OrdersOrderBusinessTaxes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'orders_order_business_taxes',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='OrdersOrderitem',
            fields=[
                ('id', models.UUIDField(primary_key=True, serialize=False)),
                ('quantity', models.DecimalField(decimal_places=2, max_digits=12)),
                ('updated_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'orders_orderitem',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PaymentsPayment',
            fields=[
                ('id', models.UUIDField(primary_key=True, serialize=False)),
                ('mode_of_payment', models.CharField(max_length=10)),
                ('status', models.CharField(max_length=10)),
                ('pay_later_date', models.DateField(blank=True, null=True)),
                ('pdf_file', models.CharField(blank=True, max_length=100, null=True)),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
                ('payment_completed_date', models.DateTimeField(blank=True, null=True)),
                ('transaction_info', models.JSONField(blank=True, null=True)),
                ('taxes_at_payment', models.JSONField(blank=True, null=True)),
            ],
            options={
                'db_table': 'payments_payment',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PaymentsSolditem',
            fields=[
                ('id', models.UUIDField(primary_key=True, serialize=False)),
                ('product', models.TextField()),
                ('unit', models.CharField(max_length=3)),
                ('quantity', models.DecimalField(decimal_places=2, max_digits=12)),
                ('price', models.DecimalField(decimal_places=2, max_digits=12)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'payments_solditem',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PosPos',
            fields=[
                ('id', models.UUIDField(primary_key=True, serialize=False)),
                ('zmk', models.CharField(max_length=100)),
                ('ip_address', models.CharField(max_length=100)),
                ('port', models.BigIntegerField()),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'pos_pos',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PosTerminalid',
            fields=[
                ('id', models.UUIDField(primary_key=True, serialize=False)),
                ('terminal_id', models.CharField(max_length=100, unique=True)),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'pos_terminalid',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RewardsystemActivityrecord',
            fields=[
                ('id', models.UUIDField(primary_key=True, serialize=False)),
                ('activity', models.CharField(max_length=200)),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'rewardsystem_activityrecord',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SharedPhotoupload',
            fields=[
                ('id', models.UUIDField(primary_key=True, serialize=False)),
                ('photo', models.CharField(blank=True, max_length=100, null=True)),
                ('created_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'shared_photoupload',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SharedTwilioservice',
            fields=[
                ('id', models.UUIDField(primary_key=True, serialize=False)),
                ('phone_number', models.CharField(max_length=128, unique=True)),
                ('service_id', models.CharField(max_length=50, unique=True)),
                ('created_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'shared_twilioservice',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='WaffleFlag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('everyone', models.BooleanField(blank=True, null=True)),
                ('percent', models.DecimalField(blank=True, decimal_places=1, max_digits=3, null=True)),
                ('testing', models.BooleanField()),
                ('superusers', models.BooleanField()),
                ('staff', models.BooleanField()),
                ('authenticated', models.BooleanField()),
                ('languages', models.TextField()),
                ('rollout', models.BooleanField()),
                ('note', models.TextField()),
                ('created', models.DateTimeField()),
                ('modified', models.DateTimeField()),
            ],
            options={
                'db_table': 'waffle_flag',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='WaffleFlagGroups',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'waffle_flag_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='WaffleFlagUsers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'waffle_flag_users',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='WaffleSample',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('percent', models.DecimalField(decimal_places=1, max_digits=4)),
                ('note', models.TextField()),
                ('created', models.DateTimeField()),
                ('modified', models.DateTimeField()),
            ],
            options={
                'db_table': 'waffle_sample',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='WaffleSwitch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('active', models.BooleanField()),
                ('note', models.TextField()),
                ('created', models.DateTimeField()),
                ('modified', models.DateTimeField()),
            ],
            options={
                'db_table': 'waffle_switch',
                'managed': False,
            },
        ),
    ]
